const div = document.getElementById("statsNumbers");

let generatedData = JSON.parse(window.localStorage.getItem("generatedData")); //The Data generated by the web worker

div.innerHTML =
    `
    <div style="color: white">
        <div class="statsNumbers">
            <svg width="35px" height="35px" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path></svg>
            <h5>
                You opened Sky on <em> ` + generatedData.daysSkyOpened + ` </em> distinct days
            </h5>
        </div>
        <div class="statsNumbers">
            <svg width="35px" height="35px" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path></svg>
            <h5>
                You played Sky for <em> ` + millisecondsToTime(generatedData.millisecondsPlayedTotal) + ` </em>
            </h5>
        </div>
        <div class="statsNumbers">
            <svg width="35px" height="35px" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
            <h5>
                You took <em> ` + (new Intl.NumberFormat()).format(generatedData.screenshotsTotal) + `</em> screenshots in total.
            </h5>
        </div>
        <div class="statsNumbers">
            <svg width="35px" height="35px" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path></svg>
            <h5>
                The most amount of screenshots you took on one day was <em> ` + (new Intl.NumberFormat()).format(generatedData.maxScreenshotsOnADay) + ` </em>
            </h5>
        </div>
        <div class="statsNumbers">
            <svg width="35px" height="35px" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            <h5>
                Your longest play session lasted <em> ` + millisecondsToTime(generatedData.maxMillisecondsOnADay) + ` </em>
            </h5>
        </div>
    </div>
    `;

/**
 * This function takes a certain amount of milliseconds, and returns a string.
 * This string will either say:
 * x minutes y seconds
 * x hours y minutes z seconds
 * w days x hours y minutes z seconds
 * Depending on how many miliseconds there are
 */
function millisecondsToTime(milliseconds)
{
    let days = Math.floor(milliseconds / 86400000);
    milliseconds %= 86400000;

    let hours = Math.floor(milliseconds / 3600000);
    milliseconds %= 3600000;

    let minutes = Math.floor(milliseconds / 60000);
    milliseconds %= 60000;

    let seconds = Math.round(milliseconds / 1000);

    let stringToReturn = "";

    if (days === 1)
    {
        stringToReturn += days + " day ";
    }
    else if (days !== 0)
    {
        stringToReturn += days + " days ";
    }
    if (hours === 1)
    {
        stringToReturn += hours + " hour ";
    }
    else if (hours !== 0)
    {
        stringToReturn += hours + " hours ";
    }
    if (minutes === 1)
    {
        stringToReturn += minutes + " minute ";
    }
    else if (minutes !== 0)
    {
        stringToReturn += minutes + " minutes ";
    }
    if (seconds === 1)
    {
        stringToReturn += seconds + " second";
    }
    else if (seconds !== 0)
    {
        stringToReturn += seconds + " seconds";
    }

    return stringToReturn;
}

/**
 * This function makes it so the "screenshotsPerHour_Card" and "screensPerMonth_Card" elements, have the same height at all times
 */
function setEqualHeight()
{
    setTimeout(() => {
        const divh = document.getElementById("screenshotsPerHour_Card").offsetHeight
        document.getElementById("screensPerMonth_Card").style.height = divh + "px";
    }, 1000);
}

setEqualHeight();
window.onresize = setEqualHeight;
