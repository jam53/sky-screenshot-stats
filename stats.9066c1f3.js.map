{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,wBAGA,IAEIC,EAFEC,EAAMC,SAASC,eAAe,+BAA+BC,WAAW,MAI1EC,EAAgBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBAEvDC,EAA6B,GAC5BC,GAAkB,EAAlBC,GAAkB,EAAlBC,OAAkBC,E,IAAvB,QAAKC,EAAAC,EAAsBC,OAAOC,QAAQd,EAAce,6BAA4BC,OAAAC,cAA/EV,GAAAI,EAAAC,EAAkBM,QAAAC,MAAlBZ,GAAkB,GAAlB,IAAAa,GAAA,EAAA3B,EAAA4B,SAAAV,EAAkBW,MAAA,GAAXC,EAAGH,EAAA,GAAEI,EAAKJ,EAAA,GAGlBd,EAA2BmB,KAAK,CAACC,EAAG,IAAKC,KAAKC,SAASL,IAAOM,cAAcC,UAAU,EAAG,IAAKC,EAAGP,GAAS,EAAI,Q,SAH7GhB,GAAkB,EAAlBC,EAAkBuB,E,YAAlBzB,GAAkB,MAAlBK,EAAkBqB,QAAlBrB,EAAkBqB,S,WAAlBzB,E,MAAAC,GAOL,IAAIyB,EAAWtC,EAAIuC,qBAAqB,EAAG,EAAG,EAAG,KACjDD,EAASE,aAAa,EAAG,qBACzBF,EAASE,aAAa,EAAG,sBAGzB,IAcMC,EAAS,CACXC,KAAM,MACNC,KAhBS,CACTC,SAAU,CACN,CACID,KAAMjC,EACNmC,MAAO,oBACPC,MAAM,EACNC,gBAAiBT,EACjBU,YAAa,OACbC,qBAAsB,OACtBC,QAAS,MAQjBC,QAAS,CACLC,OAAQ,EACRC,UAAW,GACXC,YAAa,GACbC,YAAY,EACZC,UAAW,CACPC,WAAY,WACR1D,GAAU,GAEd2D,MAAO,SAACC,GACJ,IAAID,EAAQ,EAIZ,MAHqB,SAAjBC,EAAQjB,MAAoC,YAAjBiB,EAAQC,MAAuB7D,IAC1D2D,EAA4B,GAApBC,EAAQE,UAAqC,GAApBF,EAAQE,WAEtCH,IAGfI,OAAQ,CACJhC,EAAG,CACCiC,KAAM,CACFC,SAAS,GAEbtB,KAAM,OACNuB,KAAM,CACFC,KAAM,UAGd/B,EAAG,CACCgC,aAAa,EACbJ,KAAM,CACFC,SAAS,EACTI,MAAO,eAOX,IAAI,EAAAC,EAAA5C,SAAMzB,EAAKyC,G","sources":["js/Charts/milliseconds-per-day_playtime.js"],"sourcesContent":["import Chart from \"chart.js/auto\";\r\nimport 'chartjs-adapter-date-fns';\r\n\r\nconst ctx = document.getElementById(\"millisecondsPerDay_Playtime\").getContext(\"2d\");\r\n\r\nlet delayed;\r\n\r\nlet generatedData = JSON.parse(window.localStorage.getItem(\"generatedData\")); //The Data generated by the web worker\r\n\r\nlet screenshotsPerDay_Playtime = [];\r\nfor (const [key, value] of Object.entries(generatedData.millisecondsPerDay_Playtime))\r\n{//Takes Object, key: unix timestamp, value: amount of milliseconds\r\n    //And makes Array, with every value of the array an object that looks as follows: {x: \"yyyy-mm-dd\", y: amount of minutes}\r\n    screenshotsPerDay_Playtime.push({x: (new Date(parseInt(key))).toISOString().substring(0, 10), y: value * (1 / 60000)});\r\n}\r\n\r\n//Gradient Fill\r\nlet gradient = ctx.createLinearGradient(0, 0, 0, 400);\r\ngradient.addColorStop(0, 'rgba(58,123,213,1');\r\ngradient.addColorStop(1, 'rgba(0,210,255,0.3');\r\n\r\n\r\nconst data = {\r\n    datasets: [\r\n        {\r\n            data: screenshotsPerDay_Playtime,\r\n            label: \"Amount Of Minutes\",\r\n            fill: true,\r\n            backgroundColor: gradient,\r\n            borderColor: \"#fff\",\r\n            pointBackgroundColor: \"#fff\",\r\n            tension: 0.4,\r\n        },\r\n    ],\r\n};\r\n\r\nconst config = {\r\n    type: 'bar',\r\n    data: data,\r\n    options: {\r\n        radius: 5,\r\n        hitRadius: 30,\r\n        hoverRadius: 12,\r\n        responsive: true,\r\n        animation: {\r\n            onComplete: () => {\r\n                delayed = true;\r\n            },\r\n            delay: (context) => {\r\n                let delay = 0;\r\n                if (context.type === \"data\" && context.mode === \"default\" && !delayed) {\r\n                    delay = context.dataIndex * 10 + context.dataIndex * 10;\r\n                }\r\n                return delay;\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    display: false,\r\n                },\r\n                type: \"time\",\r\n                time: {\r\n                    unit: 'month',\r\n                },\r\n            },\r\n            y: {\r\n                beginAtZero: true,\r\n                grid: {\r\n                    display: true,\r\n                    color: \"#343434\"\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nconst myChart = new Chart(ctx, config);\r\n"],"names":["$dqBnD","parcelRequire","$fc4a46321b229124$var$delayed","$fc4a46321b229124$var$ctx","document","getElementById","getContext","$fc4a46321b229124$var$generatedData","JSON","parse","window","localStorage","getItem","$fc4a46321b229124$var$screenshotsPerDay_Playtime","$fc4a46321b229124$var$_iteratorNormalCompletion","$fc4a46321b229124$var$_didIteratorError","$fc4a46321b229124$var$_iteratorError","undefined","$fc4a46321b229124$var$_step","$fc4a46321b229124$var$_iterator","Object","entries","millisecondsPerDay_Playtime","Symbol","iterator","next","done","$fc4a46321b229124$var$_value","default","value","$fc4a46321b229124$var$key","$fc4a46321b229124$var$value","push","x","Date","parseInt","toISOString","substring","y","err","return","$fc4a46321b229124$var$gradient","createLinearGradient","addColorStop","$fc4a46321b229124$var$config","type","data","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","tension","options","radius","hitRadius","hoverRadius","responsive","animation","onComplete","delay","context","mode","dataIndex","scales","grid","display","time","unit","beginAtZero","color","$3D7o2"],"version":3,"file":"stats.9066c1f3.js.map"}